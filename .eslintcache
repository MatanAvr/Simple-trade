[{"C:\\Users\\Matan\\SimpleTrade\\src\\index.js":"1","C:\\Users\\Matan\\SimpleTrade\\src\\App.js":"2","C:\\Users\\Matan\\SimpleTrade\\src\\store\\auth-context.js":"3","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Auth\\AuthForm.js":"4","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\MainScreen.js":"5","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Header.js":"6","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Button.js":"7","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Footer.js":"8","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\LoadingSpinner.js":"9","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Portfolio.js":"10","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioItem.js":"11","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeScreen.js":"12","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Leaderboard.js":"13","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Explanation.js":"14","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\LeaderboardItem.js":"15","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Modal.js":"16","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeForm.js":"17","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Dropdown.js":"18","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Search.js":"19","C:\\Users\\Matan\\SimpleTrade\\src\\store\\stocksArr.js":"20","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Graph.js":"21","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioWithUpdate.js":"22"},{"size":322,"mtime":1658154243140,"results":"23","hashOfConfig":"24"},{"size":587,"mtime":1658402309723,"results":"25","hashOfConfig":"24"},{"size":8533,"mtime":1659173532418,"results":"26","hashOfConfig":"24"},{"size":4504,"mtime":1659255228278,"results":"27","hashOfConfig":"24"},{"size":2192,"mtime":1659256699430,"results":"28","hashOfConfig":"24"},{"size":1767,"mtime":1658751591132,"results":"29","hashOfConfig":"24"},{"size":697,"mtime":1658751594133,"results":"30","hashOfConfig":"24"},{"size":339,"mtime":1658751384544,"results":"31","hashOfConfig":"24"},{"size":366,"mtime":1658651766242,"results":"32","hashOfConfig":"24"},{"size":836,"mtime":1658735528380,"results":"33","hashOfConfig":"24"},{"size":742,"mtime":1658735827410,"results":"34","hashOfConfig":"24"},{"size":2387,"mtime":1658767745396,"results":"35","hashOfConfig":"24"},{"size":1474,"mtime":1658747251943,"results":"36","hashOfConfig":"24"},{"size":1081,"mtime":1659256705001,"results":"37","hashOfConfig":"24"},{"size":982,"mtime":1659173504700,"results":"38","hashOfConfig":"24"},{"size":801,"mtime":1659258370079,"results":"39","hashOfConfig":"24"},{"size":4871,"mtime":1659255145718,"results":"40","hashOfConfig":"24"},{"size":444,"mtime":1658751619288,"results":"41","hashOfConfig":"24"},{"size":2889,"mtime":1659258440031,"results":"42","hashOfConfig":"24"},{"size":91669,"mtime":1659258179658,"results":"43","hashOfConfig":"24"},{"size":2758,"mtime":1658768263373,"results":"44","hashOfConfig":"24"},{"size":2083,"mtime":1658761369830,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pxdjgp",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"48"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},"C:\\Users\\Matan\\SimpleTrade\\src\\index.js",[],["94","95"],"C:\\Users\\Matan\\SimpleTrade\\src\\App.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\store\\auth-context.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Auth\\AuthForm.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\MainScreen.js",["96","97"],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Header.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Button.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Footer.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\LoadingSpinner.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Portfolio.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioItem.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeScreen.js",["98"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./TradeScreen.module.css\";\r\nimport Button from \"../UI/Button\";\r\nimport TradeForm from \"./TradeForm\";\r\nimport refreshIcon from \"../../components/img/refresh.png\";\r\nimport Graph from \"../UI/Graph\";\r\n\r\nconst BASE_URL = \"https://simple-trade-israel-dev.herokuapp.com\";\r\n\r\nconst TradeScreen = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [loading, setLoading] = useState(false);\r\n  const [price, setPrice] = useState(\"\");\r\n  const token = authCtx.token;\r\n\r\n  const currentSymbol = authCtx.trading.symbol;\r\n\r\n  const getQuote = async function () {\r\n    if (currentSymbol === \"\") return;\r\n    setLoading(true);\r\n    const URLextension = \"/portfolio/symbol/\";\r\n    const url = `${BASE_URL}${URLextension}${currentSymbol}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        // mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        setLoading(false);\r\n        authCtx.toggleError(data.error);\r\n        return;\r\n      }\r\n\r\n      setPrice(data.currentPrice);\r\n\r\n      setLoading(false);\r\n    } catch (err) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    getQuote(currentSymbol);\r\n  }, [currentSymbol]);\r\n\r\n  return (\r\n    <div className={classes.tradeScreen}>\r\n      <Button\r\n        title=\"Go back\"\r\n        onClick={authCtx.loadTradeScreen.bind(null, \"back\")}\r\n      />\r\n      <div className={classes.cards}>\r\n        <div className={classes.card1}>\r\n          <Graph symbol={currentSymbol} />\r\n        </div>\r\n\r\n        <div className={classes.card2}>\r\n          <h2>{`Trade ${currentSymbol}`}</h2>\r\n          {loading ? <LoadingSpinner /> : <p>{`Current price: $${price}`}</p>}\r\n          <Button onClick={getQuote}>\r\n            <img\r\n              alt=\"Refresh\"\r\n              src={refreshIcon}\r\n              height=\"15px\"\r\n              draggable=\"false\"\r\n            />\r\n          </Button>\r\n        </div>\r\n\r\n        <div className={classes.card3}>\r\n          <TradeForm symbol={currentSymbol} price={price} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TradeScreen;\r\n","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Leaderboard.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Explanation.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\LeaderboardItem.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Modal.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeForm.js",["99"],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Dropdown.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Search.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\store\\stocksArr.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Graph.js",["100"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport classes from \"./Graph.module.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport Button from \"./Button\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  maintainAspectRatio: false, // Don't maintain w/h ratio\r\n};\r\n\r\nlet dataSet = {\r\n  labels: [],\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n  datasets: [\r\n    {\r\n      label: \"Stock price\",\r\n      data: [],\r\n      backgroundColor: \"rgb(0, 99, 132)\",\r\n      borderColor: \"rgb(0, 99, 132)\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Graph = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const graphLoaded = authCtx.graphLoaded;\r\n  const [currentRange, setCurrentRange] = useState(\"INTRADAY\");\r\n\r\n  useEffect(() => {\r\n    authCtx.loadGraph(props.symbol);\r\n    setCurrentRange(\"INTRADAY\");\r\n  }, [authCtx.trading.symbol]);\r\n\r\n  if (graphLoaded) {\r\n    dataSet.datasets[0].label = props.symbol;\r\n    dataSet.labels = [...authCtx.graphData.time];\r\n    dataSet.datasets[0].data = [...authCtx.graphData.price];\r\n  }\r\n\r\n  const grpahRangeHandler = (newRanage) => {\r\n    if (newRanage === currentRange) return;\r\n    //Range: \"MONTHLY\" / \"WEEKLY\" / \"DAILY\" /\"INTRADAY\"\r\n    setCurrentRange(newRanage);\r\n    authCtx.loadGraph(props.symbol, newRanage);\r\n  };\r\n\r\n  return graphLoaded ? (\r\n    <div className={classes.graphContainer}>\r\n      <div className={classes.graphUI}>\r\n        <Button\r\n          type={currentRange === \"MONTHLY\" ? \"navActive\" : \"\"}\r\n          title=\"Monthly\"\r\n          onClick={grpahRangeHandler.bind(null, \"MONTHLY\")}\r\n        />\r\n        <Button\r\n          type={currentRange === \"WEEKLY\" ? \"navActive\" : \"\"}\r\n          title=\"Weekly\"\r\n          onClick={grpahRangeHandler.bind(null, \"WEEKLY\")}\r\n        />\r\n        <Button\r\n          type={currentRange === \"DAILY\" ? \"navActive\" : \"\"}\r\n          title=\"Day\"\r\n          onClick={grpahRangeHandler.bind(null, \"DAILY\")}\r\n        />\r\n        <Button\r\n          type={currentRange === \"INTRADAY\" ? \"navActive\" : \"\"}\r\n          title=\"Interday\"\r\n          onClick={grpahRangeHandler.bind(null, \"INTRADAY\")}\r\n        />\r\n      </div>\r\n      <div className={classes.chart}>\r\n        <Line data={dataSet} options={options} />\r\n      </div>\r\n    </div>\r\n  ) : props.symbol ? (\r\n    <LoadingSpinner />\r\n  ) : (\r\n    <h2>Search a stock and start trading!</h2>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioWithUpdate.js",["101"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport classes from \"./PortfolioWithUpdate.module.css\";\r\n\r\nconst BASE_URL = \"https://simple-trade-israel-dev.herokuapp.com\";\r\n\r\nconst PortfolioWithUpdate = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const token = authCtx.token;\r\n  const [currentPrice, setCurrentPrice] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const currentSymbol = props.item.symbol;\r\n\r\n  const getCurrentPrice = async function () {\r\n    if (currentSymbol === \"\") return;\r\n    setLoading(true);\r\n    const URLextension = \"/portfolio/symbol/\";\r\n    const url = `${BASE_URL}${URLextension}${currentSymbol}`;\r\n\r\n    try {\r\n      const response = await fetch(url, {\r\n        // mode: \"cors\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      if (!response.ok) {\r\n        setLoading(false);\r\n        setCurrentPrice(\"FAILED\");\r\n        return;\r\n      }\r\n      const data = await response.json();\r\n      const pl = (\r\n        ((data.currentPrice - props.item.price) / props.item.price) *\r\n        100\r\n      ).toFixed(2);\r\n\r\n      setLoading(false);\r\n      setCurrentPrice(pl);\r\n    } catch (err) {\r\n      return;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCurrentPrice(currentSymbol);\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {`${props.item.symbol}, Qty: ${props.item.quantity},\r\n  average buy price: $${props.item.price.toFixed(2)}`}\r\n      {loading ? (\r\n        <LoadingSpinner size=\"small\" />\r\n      ) : (\r\n        <div>\r\n          {\" \"}\r\n          P/L:\r\n          <span\r\n            className={\r\n              currentPrice > 0\r\n                ? classes.green\r\n                : currentPrice < 0\r\n                ? classes.red\r\n                : \"\"\r\n            }\r\n          >\r\n            {currentPrice}%\r\n          </span>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PortfolioWithUpdate;\r\n",{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":17,"column":21,"nodeType":"108","messageId":"109","endLine":17,"endColumn":33},{"ruleId":"110","severity":1,"message":"111","line":22,"column":6,"nodeType":"112","endLine":22,"endColumn":8,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":51,"column":6,"nodeType":"112","endLine":51,"endColumn":21,"suggestions":"115"},{"ruleId":"110","severity":1,"message":"116","line":42,"column":6,"nodeType":"112","endLine":42,"endColumn":32,"suggestions":"117"},{"ruleId":"110","severity":1,"message":"118","line":56,"column":6,"nodeType":"112","endLine":56,"endColumn":30,"suggestions":"119"},{"ruleId":"110","severity":1,"message":"120","line":49,"column":6,"nodeType":"112","endLine":49,"endColumn":8,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"no-unused-vars","'setShowModal' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authCtx.loadLeaderboard'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has a missing dependency: 'getQuote'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["126"],"React Hook useEffect has missing dependencies: 'authCtx' and 'props.symbol'. Either include them or remove the dependency array.",["127"],"React Hook useEffect has missing dependencies: 'currentSymbol' and 'getCurrentPrice'. Either include them or remove the dependency array.",["128"],"no-global-assign","no-unsafe-negation",{"desc":"129","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},"Update the dependencies array to be: [authCtx.loadLeaderboard]",{"range":"139","text":"140"},"Update the dependencies array to be: [currentSymbol, getQuote]",{"range":"141","text":"142"},"Update the dependencies array to be: [authCtx.userData.balance, init]",{"range":"143","text":"144"},"Update the dependencies array to be: [authCtx, authCtx.trading.symbol, props.symbol]",{"range":"145","text":"146"},"Update the dependencies array to be: [currentSymbol, getCurrentPrice]",{"range":"147","text":"148"},[792,794],"[authCtx.loadLeaderboard]",[1467,1482],"[currentSymbol, getQuote]",[1397,1423],"[authCtx.userData.balance, init]",[1202,1226],"[authCtx, authCtx.trading.symbol, props.symbol]",[1461,1463],"[currentSymbol, getCurrentPrice]"]