[{"C:\\Users\\Matan\\SimpleTrade\\src\\index.js":"1","C:\\Users\\Matan\\SimpleTrade\\src\\App.js":"2","C:\\Users\\Matan\\SimpleTrade\\src\\store\\auth-context.js":"3","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Auth\\AuthForm.js":"4","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\MainScreen.js":"5","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Header.js":"6","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Button.js":"7","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Footer.js":"8","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\LoadingSpinner.js":"9","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Portfolio.js":"10","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioItem.js":"11","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeScreen.js":"12","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Leaderboard.js":"13","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Explanation.js":"14","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\LeaderboardItem.js":"15","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Modal.js":"16","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeForm.js":"17","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Dropdown.js":"18","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Search.js":"19","C:\\Users\\Matan\\SimpleTrade\\src\\store\\stocksArr.js":"20","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Graph.js":"21","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioWithUpdate.js":"22"},{"size":322,"mtime":1658154243140,"results":"23","hashOfConfig":"24"},{"size":587,"mtime":1658402309723,"results":"25","hashOfConfig":"24"},{"size":8349,"mtime":1659265537349,"results":"26","hashOfConfig":"24"},{"size":4504,"mtime":1659255228278,"results":"27","hashOfConfig":"24"},{"size":2224,"mtime":1659259067595,"results":"28","hashOfConfig":"24"},{"size":1767,"mtime":1658751591132,"results":"29","hashOfConfig":"24"},{"size":697,"mtime":1658751594133,"results":"30","hashOfConfig":"24"},{"size":339,"mtime":1658751384544,"results":"31","hashOfConfig":"24"},{"size":366,"mtime":1658651766242,"results":"32","hashOfConfig":"24"},{"size":836,"mtime":1658735528380,"results":"33","hashOfConfig":"24"},{"size":742,"mtime":1658735827410,"results":"34","hashOfConfig":"24"},{"size":2361,"mtime":1659265520803,"results":"35","hashOfConfig":"24"},{"size":1446,"mtime":1659265464487,"results":"36","hashOfConfig":"24"},{"size":1004,"mtime":1659264523456,"results":"37","hashOfConfig":"24"},{"size":982,"mtime":1659173504700,"results":"38","hashOfConfig":"24"},{"size":801,"mtime":1659258370079,"results":"39","hashOfConfig":"24"},{"size":4871,"mtime":1659255145718,"results":"40","hashOfConfig":"24"},{"size":444,"mtime":1659265554332,"results":"41","hashOfConfig":"24"},{"size":2961,"mtime":1659265549244,"results":"42","hashOfConfig":"24"},{"size":91669,"mtime":1659258179658,"results":"43","hashOfConfig":"24"},{"size":2758,"mtime":1658768263373,"results":"44","hashOfConfig":"24"},{"size":2057,"mtime":1659265522932,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"pxdjgp",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"48"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"48"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Matan\\SimpleTrade\\src\\index.js",[],["95","96"],"C:\\Users\\Matan\\SimpleTrade\\src\\App.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\store\\auth-context.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Auth\\AuthForm.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\MainScreen.js",["97","98"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport classes from \"./MainScreen.module.css\";\r\nimport Header from \"./Header\";\r\nimport Portfolio from \"../User/Portfolio\";\r\nimport Explanation from \"../User/Explanation\";\r\nimport Footer from \"./Footer\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport TradeScreen from \"./TradeScreen\";\r\nimport Leaderboard from \"../User/Leaderboard\";\r\nimport Search from \"../UI/Search\";\r\nimport Modal from \"../UI/Modal\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst MainScreen = () => {\r\n  const authCtx = useContext(AuthContext);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  useEffect(() => {\r\n    isLoddegIn();\r\n    setTimeout(authCtx.loadLeaderboard, 500);\r\n  }, []);\r\n\r\n  const isLoddegIn = () => {};\r\n\r\n  const modalHandler = () => {\r\n    authCtx.toggleError();\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      {showModal || authCtx.error ? (\r\n        <Modal onClose={modalHandler}>\r\n          <p>\r\n            {authCtx.errorMsg ? authCtx.errorMsg : \"Something went wrong\"}\r\n            <br /> Please try again :)\r\n          </p>\r\n          <Button title=\"Close\" onClick={modalHandler} />\r\n        </Modal>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Header />\r\n      <div className={classes.upperCard}>\r\n        {authCtx.userData ? (\r\n          <>\r\n            {`Welcome ${authCtx.userData.name}! `}\r\n            {/* {authCtx.trading.status ? <Search /> : \"\"} */}\r\n            <Search />\r\n            {`Available cash: $${authCtx.userData.balance.toFixed(2)}`}\r\n          </>\r\n        ) : (\r\n          <LoadingSpinner />\r\n        )}\r\n      </div>\r\n      <div className={classes.cards}>\r\n        {authCtx.trading.status ? (\r\n          <TradeScreen />\r\n        ) : (\r\n          <>\r\n            <div className={classes.card}>\r\n              <Portfolio />\r\n            </div>\r\n            <div className={classes.card}>\r\n              <Explanation />\r\n            </div>\r\n            <div className={classes.card}>\r\n              <Leaderboard />\r\n            </div>\r\n          </>\r\n        )}\r\n      </div>\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Header.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Button.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\Footer.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\LoadingSpinner.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Portfolio.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioItem.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeScreen.js",["99"],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Leaderboard.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\Explanation.js",["100"],"import React from \"react\";\r\nimport classes from \"./Explanation.module.css\";\r\nimport Search from \"../UI/Search\";\r\n\r\nconst Explanation = () => {\r\n  return (\r\n    <div className={classes.middleCard}>\r\n      <p className={classes.p}>\r\n        <u>Explanation</u>\r\n        <br />\r\n        Simple-trade is an educational simplified trading platform, which allows\r\n        you to simulate basic stock trading. You start with 10k$, try to be the\r\n        most profitable trader!\r\n        <br />\r\n        <br />\r\n        On the portfolio card you can see your current holdings: stock symbol,\r\n        quantity, average buy price, and profit/lost.\r\n        <br />\r\n        <br />\r\n        On the leaderboard card you can see a list that shows the users with the\r\n        highest profit in descending order.\r\n        <br />\r\n        <br />\r\n        Use the search bar to look for (autocompleted) real stocks and start\r\n        trading!\r\n      </p>\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Explanation;\r\n","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\LeaderboardItem.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Modal.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\Layout\\TradeForm.js",["101"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport classes from \"./TradeForm.module.css\";\r\nimport Dropdown from \"../UI/Dropdown\";\r\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\r\nimport Button from \"../UI/Button\";\r\n\r\nconst dropdownOptions = [\r\n  { label: \"Buy\", value: \"buy\" },\r\n  { label: \"Sell\", value: \"sell\" },\r\n];\r\n\r\nconst TradeForm = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const loadingOrder = authCtx.loadingOrder;\r\n  const currentPortfolio = authCtx.portfolio;\r\n  const symbol = props.symbol;\r\n\r\n  const maxQuantity = maxStocksQuantity(currentPortfolio, symbol);\r\n  const [price, setPrice] = useState(0);\r\n  const [quantity, setQuantity] = useState(1);\r\n  const [orderValue, setOrderValue] = useState(100);\r\n  const [orderType, setOrderType] = useState(\"buy\");\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [init, setInit] = useState(true);\r\n  const [orderSuccess, setOrderSuccess] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setPrice(props.price);\r\n    const currentQuantity = quantity;\r\n    const currentPrice = price;\r\n    setOrderValue((currentQuantity * currentPrice).toFixed(2));\r\n  }, [price, quantity, props]);\r\n\r\n  useEffect(() => {\r\n    if (!init) {\r\n      setOrderSuccess(true);\r\n      setTimeout(() => {\r\n        setOrderSuccess(false);\r\n      }, 2000);\r\n    }\r\n  }, [authCtx.userData.balance]);\r\n\r\n  const quantityChangeHandler = (event) => {\r\n    event.preventDefault();\r\n    let newQuantity = quantity;\r\n    const action = event.target.value;\r\n\r\n    if (isNaN(newQuantity)) alert(\"Plase enter a number\");\r\n    else if (action === \"+\") newQuantity++;\r\n    else if (action === \"-\" && newQuantity > 1) newQuantity--;\r\n    else if (action === \"Max\") newQuantity = maxQuantity;\r\n    else if (newQuantity < 1) newQuantity = 1;\r\n\r\n    setQuantity(newQuantity);\r\n  };\r\n\r\n  const submitHandler = async (event) => {\r\n    event.preventDefault();\r\n    setInit(false);\r\n    setErrMsg(\"\");\r\n\r\n    if (quantity < 1 || quantity % 1 !== 0) {\r\n      console.log(quantity & 1);\r\n      errMsgHandler(\"Quantity must be a whole number greater than 0\");\r\n      return;\r\n    }\r\n    if (orderType === \"sell\" && quantity > maxQuantity) {\r\n      errMsgHandler(\"You dont have enough stocks\");\r\n      return;\r\n    }\r\n    if (orderType === \"buy\" && orderValue > authCtx.userData.balance) {\r\n      errMsgHandler(\"You dont have enough balance\");\r\n      return;\r\n    }\r\n    if (!price || price < 0) {\r\n      errMsgHandler(\"Something wrong with the price\");\r\n      return;\r\n    }\r\n    if (!symbol) {\r\n      errMsgHandler(\"Check the symbol\");\r\n      return;\r\n    }\r\n\r\n    authCtx.order(orderType, symbol, quantity, price);\r\n  };\r\n\r\n  const dropdownChangeHandler = (event) => {\r\n    setOrderType(event.target.value);\r\n  };\r\n\r\n  const errMsgHandler = (text = \"Something went wrong\") => {\r\n    setErrMsg(text);\r\n    setTimeout(() => {\r\n      setErrMsg(\"\");\r\n    }, 5000);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler} className={classes.orderForm}>\r\n      {`You currently have ${maxQuantity} ${symbol} stocks`}\r\n      <br />\r\n      {`Average buy price: $${averageBuyPrice(currentPortfolio, symbol).toFixed(\r\n        2\r\n      )}`}\r\n      <Dropdown\r\n        label=\"Order Type:\"\r\n        options={dropdownOptions}\r\n        value={orderType}\r\n        onChange={dropdownChangeHandler}\r\n      />\r\n      <label>\r\n        Order quantity:{\" \"}\r\n        <input\r\n          name=\"orderQuantity\"\r\n          value={quantity}\r\n          type=\"number\"\r\n          step=\"1\"\r\n          min=\"1\"\r\n          max=\"10000\"\r\n          onChange={(e) => {\r\n            setQuantity(e.target.value);\r\n          }}\r\n        />\r\n      </label>\r\n      <div className={classes.cards}>\r\n        <Button title=\" - \" value=\"-\" onClick={quantityChangeHandler} />\r\n        <Button title=\" + \" value=\"+\" onClick={quantityChangeHandler} />\r\n        {orderType === \"sell\" ? (\r\n          <Button title=\"Max\" value=\"Max\" onClick={quantityChangeHandler} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n      Order value: ${orderValue}\r\n      {errMsg ? <p className={classes.error}>{errMsg}</p> : \"\"}\r\n      {!loadingOrder && !orderSuccess ? (\r\n        <Button title=\"Confirm\" onClick={submitHandler} />\r\n      ) : orderSuccess ? (\r\n        <p className={classes.success}>Order completed successfully </p>\r\n      ) : (\r\n        <LoadingSpinner />\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nconst maxStocksQuantity = (portfolio, symbol) => {\r\n  const currentStock = portfolio.find((stock) => stock.symbol === symbol);\r\n  if (currentStock) return currentStock.quantity;\r\n  return 0;\r\n};\r\n\r\nconst averageBuyPrice = (portfolio, symbol) => {\r\n  const currentStock = portfolio.find((stock) => stock.symbol === symbol);\r\n  if (currentStock) return currentStock.price;\r\n  return 0;\r\n};\r\n\r\nexport default TradeForm;\r\n","C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Dropdown.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Search.js",["102"],"C:\\Users\\Matan\\SimpleTrade\\src\\store\\stocksArr.js",[],"C:\\Users\\Matan\\SimpleTrade\\src\\components\\UI\\Graph.js",["103"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport AuthContext from \"../../store/auth-context\";\r\nimport LoadingSpinner from \"./LoadingSpinner\";\r\nimport classes from \"./Graph.module.css\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport {\r\n  Chart as ChartJS,\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n} from \"chart.js\";\r\nimport Button from \"./Button\";\r\n\r\nChartJS.register(\r\n  CategoryScale,\r\n  LinearScale,\r\n  PointElement,\r\n  LineElement,\r\n  Title,\r\n  Tooltip,\r\n  Legend\r\n);\r\n\r\nconst options = {\r\n  maintainAspectRatio: false, // Don't maintain w/h ratio\r\n};\r\n\r\nlet dataSet = {\r\n  labels: [],\r\n  options: {\r\n    responsive: true,\r\n    maintainAspectRatio: false,\r\n  },\r\n  datasets: [\r\n    {\r\n      label: \"Stock price\",\r\n      data: [],\r\n      backgroundColor: \"rgb(0, 99, 132)\",\r\n      borderColor: \"rgb(0, 99, 132)\",\r\n    },\r\n  ],\r\n};\r\n\r\nconst Graph = (props) => {\r\n  const authCtx = useContext(AuthContext);\r\n  const graphLoaded = authCtx.graphLoaded;\r\n  const [currentRange, setCurrentRange] = useState(\"INTRADAY\");\r\n\r\n  useEffect(() => {\r\n    authCtx.loadGraph(props.symbol);\r\n    setCurrentRange(\"INTRADAY\");\r\n  }, [authCtx.trading.symbol]);\r\n\r\n  if (graphLoaded) {\r\n    dataSet.datasets[0].label = props.symbol;\r\n    dataSet.labels = [...authCtx.graphData.time];\r\n    dataSet.datasets[0].data = [...authCtx.graphData.price];\r\n  }\r\n\r\n  const grpahRangeHandler = (newRanage) => {\r\n    if (newRanage === currentRange) return;\r\n    //Range: \"MONTHLY\" / \"WEEKLY\" / \"DAILY\" /\"INTRADAY\"\r\n    setCurrentRange(newRanage);\r\n    authCtx.loadGraph(props.symbol, newRanage);\r\n  };\r\n\r\n  return graphLoaded ? (\r\n    <div className={classes.graphContainer}>\r\n      <div className={classes.graphUI}>\r\n        <Button\r\n          type={currentRange === \"MONTHLY\" ? \"navActive\" : \"\"}\r\n          title=\"Monthly\"\r\n          onClick={grpahRangeHandler.bind(null, \"MONTHLY\")}\r\n        />\r\n        <Button\r\n          type={currentRange === \"WEEKLY\" ? \"navActive\" : \"\"}\r\n          title=\"Weekly\"\r\n          onClick={grpahRangeHandler.bind(null, \"WEEKLY\")}\r\n        />\r\n        <Button\r\n          type={currentRange === \"DAILY\" ? \"navActive\" : \"\"}\r\n          title=\"Day\"\r\n          onClick={grpahRangeHandler.bind(null, \"DAILY\")}\r\n        />\r\n        <Button\r\n          type={currentRange === \"INTRADAY\" ? \"navActive\" : \"\"}\r\n          title=\"Interday\"\r\n          onClick={grpahRangeHandler.bind(null, \"INTRADAY\")}\r\n        />\r\n      </div>\r\n      <div className={classes.chart}>\r\n        <Line data={dataSet} options={options} />\r\n      </div>\r\n    </div>\r\n  ) : props.symbol ? (\r\n    <LoadingSpinner />\r\n  ) : (\r\n    <h2>Search a stock and start trading!</h2>\r\n  );\r\n};\r\n\r\nexport default Graph;\r\n","C:\\Users\\Matan\\SimpleTrade\\src\\components\\User\\PortfolioWithUpdate.js",["104"],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":17,"column":21,"nodeType":"111","messageId":"112","endLine":17,"endColumn":33},{"ruleId":"113","severity":1,"message":"114","line":22,"column":6,"nodeType":"115","endLine":22,"endColumn":8,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":50,"column":6,"nodeType":"115","endLine":50,"endColumn":21,"suggestions":"118"},{"ruleId":"109","severity":1,"message":"119","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":14},{"ruleId":"113","severity":1,"message":"120","line":42,"column":6,"nodeType":"115","endLine":42,"endColumn":32,"suggestions":"121"},{"ruleId":"109","severity":1,"message":"122","line":16,"column":9,"nodeType":"111","messageId":"112","endLine":16,"endColumn":17},{"ruleId":"113","severity":1,"message":"123","line":56,"column":6,"nodeType":"115","endLine":56,"endColumn":30,"suggestions":"124"},{"ruleId":"113","severity":1,"message":"125","line":48,"column":6,"nodeType":"115","endLine":48,"endColumn":8,"suggestions":"126"},"no-native-reassign",["127"],"no-negated-in-lhs",["128"],"no-unused-vars","'setShowModal' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'authCtx.loadLeaderboard'. Either include it or remove the dependency array.","ArrayExpression",["129"],"React Hook useEffect has a missing dependency: 'getQuote'. Either include it or remove the dependency array.",["130"],"'Search' is defined but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["131"],"'showNote' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'authCtx' and 'props.symbol'. Either include them or remove the dependency array.",["132"],"React Hook useEffect has missing dependencies: 'currentSymbol' and 'getCurrentPrice'. Either include them or remove the dependency array.",["133"],"no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},{"desc":"142","fix":"143"},"Update the dependencies array to be: [authCtx.loadLeaderboard]",{"range":"144","text":"145"},"Update the dependencies array to be: [currentSymbol, getQuote]",{"range":"146","text":"147"},"Update the dependencies array to be: [authCtx.userData.balance, init]",{"range":"148","text":"149"},"Update the dependencies array to be: [authCtx, authCtx.trading.symbol, props.symbol]",{"range":"150","text":"151"},"Update the dependencies array to be: [currentSymbol, getCurrentPrice]",{"range":"152","text":"153"},[792,794],"[authCtx.loadLeaderboard]",[1441,1456],"[currentSymbol, getQuote]",[1397,1423],"[authCtx.userData.balance, init]",[1202,1226],"[authCtx, authCtx.trading.symbol, props.symbol]",[1435,1437],"[currentSymbol, getCurrentPrice]"]